package com.focustech.cookinglove.ibator.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CardMapExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table card_map
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table card_map
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table card_map
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table card_map
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public CardMapExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table card_map
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table card_map
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table card_map
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table card_map
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table card_map
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table card_map
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table card_map
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table card_map
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table card_map
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table card_map
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table card_map
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andRecIdIsNull() {
			addCriterion("rec_id is null");
			return (Criteria) this;
		}

		public Criteria andRecIdIsNotNull() {
			addCriterion("rec_id is not null");
			return (Criteria) this;
		}

		public Criteria andRecIdEqualTo(Long value) {
			addCriterion("rec_id =", value, "recId");
			return (Criteria) this;
		}

		public Criteria andRecIdNotEqualTo(Long value) {
			addCriterion("rec_id <>", value, "recId");
			return (Criteria) this;
		}

		public Criteria andRecIdGreaterThan(Long value) {
			addCriterion("rec_id >", value, "recId");
			return (Criteria) this;
		}

		public Criteria andRecIdGreaterThanOrEqualTo(Long value) {
			addCriterion("rec_id >=", value, "recId");
			return (Criteria) this;
		}

		public Criteria andRecIdLessThan(Long value) {
			addCriterion("rec_id <", value, "recId");
			return (Criteria) this;
		}

		public Criteria andRecIdLessThanOrEqualTo(Long value) {
			addCriterion("rec_id <=", value, "recId");
			return (Criteria) this;
		}

		public Criteria andRecIdIn(List<Long> values) {
			addCriterion("rec_id in", values, "recId");
			return (Criteria) this;
		}

		public Criteria andRecIdNotIn(List<Long> values) {
			addCriterion("rec_id not in", values, "recId");
			return (Criteria) this;
		}

		public Criteria andRecIdBetween(Long value1, Long value2) {
			addCriterion("rec_id between", value1, value2, "recId");
			return (Criteria) this;
		}

		public Criteria andRecIdNotBetween(Long value1, Long value2) {
			addCriterion("rec_id not between", value1, value2, "recId");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("user_id is null");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("user_id is not null");
			return (Criteria) this;
		}

		public Criteria andUserIdEqualTo(Long value) {
			addCriterion("user_id =", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotEqualTo(Long value) {
			addCriterion("user_id <>", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThan(Long value) {
			addCriterion("user_id >", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
			addCriterion("user_id >=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThan(Long value) {
			addCriterion("user_id <", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThanOrEqualTo(Long value) {
			addCriterion("user_id <=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdIn(List<Long> values) {
			addCriterion("user_id in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotIn(List<Long> values) {
			addCriterion("user_id not in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdBetween(Long value1, Long value2) {
			addCriterion("user_id between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotBetween(Long value1, Long value2) {
			addCriterion("user_id not between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andCardIdIsNull() {
			addCriterion("card_id is null");
			return (Criteria) this;
		}

		public Criteria andCardIdIsNotNull() {
			addCriterion("card_id is not null");
			return (Criteria) this;
		}

		public Criteria andCardIdEqualTo(Long value) {
			addCriterion("card_id =", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdNotEqualTo(Long value) {
			addCriterion("card_id <>", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdGreaterThan(Long value) {
			addCriterion("card_id >", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdGreaterThanOrEqualTo(Long value) {
			addCriterion("card_id >=", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdLessThan(Long value) {
			addCriterion("card_id <", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdLessThanOrEqualTo(Long value) {
			addCriterion("card_id <=", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdIn(List<Long> values) {
			addCriterion("card_id in", values, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdNotIn(List<Long> values) {
			addCriterion("card_id not in", values, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdBetween(Long value1, Long value2) {
			addCriterion("card_id between", value1, value2, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdNotBetween(Long value1, Long value2) {
			addCriterion("card_id not between", value1, value2, "cardId");
			return (Criteria) this;
		}

		public Criteria andWeightIsNull() {
			addCriterion("weight is null");
			return (Criteria) this;
		}

		public Criteria andWeightIsNotNull() {
			addCriterion("weight is not null");
			return (Criteria) this;
		}

		public Criteria andWeightEqualTo(Integer value) {
			addCriterion("weight =", value, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightNotEqualTo(Integer value) {
			addCriterion("weight <>", value, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightGreaterThan(Integer value) {
			addCriterion("weight >", value, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightGreaterThanOrEqualTo(Integer value) {
			addCriterion("weight >=", value, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightLessThan(Integer value) {
			addCriterion("weight <", value, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightLessThanOrEqualTo(Integer value) {
			addCriterion("weight <=", value, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightIn(List<Integer> values) {
			addCriterion("weight in", values, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightNotIn(List<Integer> values) {
			addCriterion("weight not in", values, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightBetween(Integer value1, Integer value2) {
			addCriterion("weight between", value1, value2, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightNotBetween(Integer value1, Integer value2) {
			addCriterion("weight not between", value1, value2, "weight");
			return (Criteria) this;
		}

		public Criteria andFrequencyIsNull() {
			addCriterion("frequency is null");
			return (Criteria) this;
		}

		public Criteria andFrequencyIsNotNull() {
			addCriterion("frequency is not null");
			return (Criteria) this;
		}

		public Criteria andFrequencyEqualTo(String value) {
			addCriterion("frequency =", value, "frequency");
			return (Criteria) this;
		}

		public Criteria andFrequencyNotEqualTo(String value) {
			addCriterion("frequency <>", value, "frequency");
			return (Criteria) this;
		}

		public Criteria andFrequencyGreaterThan(String value) {
			addCriterion("frequency >", value, "frequency");
			return (Criteria) this;
		}

		public Criteria andFrequencyGreaterThanOrEqualTo(String value) {
			addCriterion("frequency >=", value, "frequency");
			return (Criteria) this;
		}

		public Criteria andFrequencyLessThan(String value) {
			addCriterion("frequency <", value, "frequency");
			return (Criteria) this;
		}

		public Criteria andFrequencyLessThanOrEqualTo(String value) {
			addCriterion("frequency <=", value, "frequency");
			return (Criteria) this;
		}

		public Criteria andFrequencyLike(String value) {
			addCriterion("frequency like", value, "frequency");
			return (Criteria) this;
		}

		public Criteria andFrequencyNotLike(String value) {
			addCriterion("frequency not like", value, "frequency");
			return (Criteria) this;
		}

		public Criteria andFrequencyIn(List<String> values) {
			addCriterion("frequency in", values, "frequency");
			return (Criteria) this;
		}

		public Criteria andFrequencyNotIn(List<String> values) {
			addCriterion("frequency not in", values, "frequency");
			return (Criteria) this;
		}

		public Criteria andFrequencyBetween(String value1, String value2) {
			addCriterion("frequency between", value1, value2, "frequency");
			return (Criteria) this;
		}

		public Criteria andFrequencyNotBetween(String value1, String value2) {
			addCriterion("frequency not between", value1, value2, "frequency");
			return (Criteria) this;
		}

		public Criteria andRemarkIsNull() {
			addCriterion("remark is null");
			return (Criteria) this;
		}

		public Criteria andRemarkIsNotNull() {
			addCriterion("remark is not null");
			return (Criteria) this;
		}

		public Criteria andRemarkEqualTo(String value) {
			addCriterion("remark =", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotEqualTo(String value) {
			addCriterion("remark <>", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThan(String value) {
			addCriterion("remark >", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThanOrEqualTo(String value) {
			addCriterion("remark >=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThan(String value) {
			addCriterion("remark <", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThanOrEqualTo(String value) {
			addCriterion("remark <=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLike(String value) {
			addCriterion("remark like", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotLike(String value) {
			addCriterion("remark not like", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkIn(List<String> values) {
			addCriterion("remark in", values, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotIn(List<String> values) {
			addCriterion("remark not in", values, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkBetween(String value1, String value2) {
			addCriterion("remark between", value1, value2, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotBetween(String value1, String value2) {
			addCriterion("remark not between", value1, value2, "remark");
			return (Criteria) this;
		}

		public Criteria andRepTimeIsNull() {
			addCriterion("rep_time is null");
			return (Criteria) this;
		}

		public Criteria andRepTimeIsNotNull() {
			addCriterion("rep_time is not null");
			return (Criteria) this;
		}

		public Criteria andRepTimeEqualTo(Date value) {
			addCriterion("rep_time =", value, "repTime");
			return (Criteria) this;
		}

		public Criteria andRepTimeNotEqualTo(Date value) {
			addCriterion("rep_time <>", value, "repTime");
			return (Criteria) this;
		}

		public Criteria andRepTimeGreaterThan(Date value) {
			addCriterion("rep_time >", value, "repTime");
			return (Criteria) this;
		}

		public Criteria andRepTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("rep_time >=", value, "repTime");
			return (Criteria) this;
		}

		public Criteria andRepTimeLessThan(Date value) {
			addCriterion("rep_time <", value, "repTime");
			return (Criteria) this;
		}

		public Criteria andRepTimeLessThanOrEqualTo(Date value) {
			addCriterion("rep_time <=", value, "repTime");
			return (Criteria) this;
		}

		public Criteria andRepTimeIn(List<Date> values) {
			addCriterion("rep_time in", values, "repTime");
			return (Criteria) this;
		}

		public Criteria andRepTimeNotIn(List<Date> values) {
			addCriterion("rep_time not in", values, "repTime");
			return (Criteria) this;
		}

		public Criteria andRepTimeBetween(Date value1, Date value2) {
			addCriterion("rep_time between", value1, value2, "repTime");
			return (Criteria) this;
		}

		public Criteria andRepTimeNotBetween(Date value1, Date value2) {
			addCriterion("rep_time not between", value1, value2, "repTime");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table card_map
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table card_map
     *
     * @mbggenerated do_not_delete_during_merge Wed Nov 14 20:05:40 CST 2012
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}