package com.focustech.cookinglove.ibator.domain;

import java.util.ArrayList;
import java.util.List;

public class AlbumPhotoExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table album_photo
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table album_photo
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table album_photo
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table album_photo
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public AlbumPhotoExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table album_photo
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table album_photo
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table album_photo
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table album_photo
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table album_photo
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table album_photo
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table album_photo
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table album_photo
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table album_photo
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table album_photo
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table album_photo
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andRecIdIsNull() {
			addCriterion("rec_id is null");
			return (Criteria) this;
		}

		public Criteria andRecIdIsNotNull() {
			addCriterion("rec_id is not null");
			return (Criteria) this;
		}

		public Criteria andRecIdEqualTo(Long value) {
			addCriterion("rec_id =", value, "recId");
			return (Criteria) this;
		}

		public Criteria andRecIdNotEqualTo(Long value) {
			addCriterion("rec_id <>", value, "recId");
			return (Criteria) this;
		}

		public Criteria andRecIdGreaterThan(Long value) {
			addCriterion("rec_id >", value, "recId");
			return (Criteria) this;
		}

		public Criteria andRecIdGreaterThanOrEqualTo(Long value) {
			addCriterion("rec_id >=", value, "recId");
			return (Criteria) this;
		}

		public Criteria andRecIdLessThan(Long value) {
			addCriterion("rec_id <", value, "recId");
			return (Criteria) this;
		}

		public Criteria andRecIdLessThanOrEqualTo(Long value) {
			addCriterion("rec_id <=", value, "recId");
			return (Criteria) this;
		}

		public Criteria andRecIdIn(List<Long> values) {
			addCriterion("rec_id in", values, "recId");
			return (Criteria) this;
		}

		public Criteria andRecIdNotIn(List<Long> values) {
			addCriterion("rec_id not in", values, "recId");
			return (Criteria) this;
		}

		public Criteria andRecIdBetween(Long value1, Long value2) {
			addCriterion("rec_id between", value1, value2, "recId");
			return (Criteria) this;
		}

		public Criteria andRecIdNotBetween(Long value1, Long value2) {
			addCriterion("rec_id not between", value1, value2, "recId");
			return (Criteria) this;
		}

		public Criteria andAlbumIdIsNull() {
			addCriterion("album_id is null");
			return (Criteria) this;
		}

		public Criteria andAlbumIdIsNotNull() {
			addCriterion("album_id is not null");
			return (Criteria) this;
		}

		public Criteria andAlbumIdEqualTo(Long value) {
			addCriterion("album_id =", value, "albumId");
			return (Criteria) this;
		}

		public Criteria andAlbumIdNotEqualTo(Long value) {
			addCriterion("album_id <>", value, "albumId");
			return (Criteria) this;
		}

		public Criteria andAlbumIdGreaterThan(Long value) {
			addCriterion("album_id >", value, "albumId");
			return (Criteria) this;
		}

		public Criteria andAlbumIdGreaterThanOrEqualTo(Long value) {
			addCriterion("album_id >=", value, "albumId");
			return (Criteria) this;
		}

		public Criteria andAlbumIdLessThan(Long value) {
			addCriterion("album_id <", value, "albumId");
			return (Criteria) this;
		}

		public Criteria andAlbumIdLessThanOrEqualTo(Long value) {
			addCriterion("album_id <=", value, "albumId");
			return (Criteria) this;
		}

		public Criteria andAlbumIdIn(List<Long> values) {
			addCriterion("album_id in", values, "albumId");
			return (Criteria) this;
		}

		public Criteria andAlbumIdNotIn(List<Long> values) {
			addCriterion("album_id not in", values, "albumId");
			return (Criteria) this;
		}

		public Criteria andAlbumIdBetween(Long value1, Long value2) {
			addCriterion("album_id between", value1, value2, "albumId");
			return (Criteria) this;
		}

		public Criteria andAlbumIdNotBetween(Long value1, Long value2) {
			addCriterion("album_id not between", value1, value2, "albumId");
			return (Criteria) this;
		}

		public Criteria andPicIdIsNull() {
			addCriterion("pic_id is null");
			return (Criteria) this;
		}

		public Criteria andPicIdIsNotNull() {
			addCriterion("pic_id is not null");
			return (Criteria) this;
		}

		public Criteria andPicIdEqualTo(Long value) {
			addCriterion("pic_id =", value, "picId");
			return (Criteria) this;
		}

		public Criteria andPicIdNotEqualTo(Long value) {
			addCriterion("pic_id <>", value, "picId");
			return (Criteria) this;
		}

		public Criteria andPicIdGreaterThan(Long value) {
			addCriterion("pic_id >", value, "picId");
			return (Criteria) this;
		}

		public Criteria andPicIdGreaterThanOrEqualTo(Long value) {
			addCriterion("pic_id >=", value, "picId");
			return (Criteria) this;
		}

		public Criteria andPicIdLessThan(Long value) {
			addCriterion("pic_id <", value, "picId");
			return (Criteria) this;
		}

		public Criteria andPicIdLessThanOrEqualTo(Long value) {
			addCriterion("pic_id <=", value, "picId");
			return (Criteria) this;
		}

		public Criteria andPicIdIn(List<Long> values) {
			addCriterion("pic_id in", values, "picId");
			return (Criteria) this;
		}

		public Criteria andPicIdNotIn(List<Long> values) {
			addCriterion("pic_id not in", values, "picId");
			return (Criteria) this;
		}

		public Criteria andPicIdBetween(Long value1, Long value2) {
			addCriterion("pic_id between", value1, value2, "picId");
			return (Criteria) this;
		}

		public Criteria andPicIdNotBetween(Long value1, Long value2) {
			addCriterion("pic_id not between", value1, value2, "picId");
			return (Criteria) this;
		}

		public Criteria andOrderWeightIsNull() {
			addCriterion("order_weight is null");
			return (Criteria) this;
		}

		public Criteria andOrderWeightIsNotNull() {
			addCriterion("order_weight is not null");
			return (Criteria) this;
		}

		public Criteria andOrderWeightEqualTo(Integer value) {
			addCriterion("order_weight =", value, "orderWeight");
			return (Criteria) this;
		}

		public Criteria andOrderWeightNotEqualTo(Integer value) {
			addCriterion("order_weight <>", value, "orderWeight");
			return (Criteria) this;
		}

		public Criteria andOrderWeightGreaterThan(Integer value) {
			addCriterion("order_weight >", value, "orderWeight");
			return (Criteria) this;
		}

		public Criteria andOrderWeightGreaterThanOrEqualTo(Integer value) {
			addCriterion("order_weight >=", value, "orderWeight");
			return (Criteria) this;
		}

		public Criteria andOrderWeightLessThan(Integer value) {
			addCriterion("order_weight <", value, "orderWeight");
			return (Criteria) this;
		}

		public Criteria andOrderWeightLessThanOrEqualTo(Integer value) {
			addCriterion("order_weight <=", value, "orderWeight");
			return (Criteria) this;
		}

		public Criteria andOrderWeightIn(List<Integer> values) {
			addCriterion("order_weight in", values, "orderWeight");
			return (Criteria) this;
		}

		public Criteria andOrderWeightNotIn(List<Integer> values) {
			addCriterion("order_weight not in", values, "orderWeight");
			return (Criteria) this;
		}

		public Criteria andOrderWeightBetween(Integer value1, Integer value2) {
			addCriterion("order_weight between", value1, value2, "orderWeight");
			return (Criteria) this;
		}

		public Criteria andOrderWeightNotBetween(Integer value1, Integer value2) {
			addCriterion("order_weight not between", value1, value2,
					"orderWeight");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table album_photo
	 * @mbggenerated  Tue Nov 27 21:19:28 CST 2012
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table album_photo
     *
     * @mbggenerated do_not_delete_during_merge Wed Nov 14 20:05:40 CST 2012
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}